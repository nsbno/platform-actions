on:
  workflow_call:
    inputs:
      repo-name:
        required: false
        type: string
        description: "Name of the ECR repository to publish to."
        default: ${{github.event.repository.name}}
      working-directory:
        required: false
        type: string
        default: "."
        description: "What working directory we are in"
      dockerfile:
        required: false
        type: string
        default: "Dockerfile"
        description: "The dockerfile"
      artifact-name:
        type: string
        default: ""
        required: false
      artifact-path:
        type: string
        default: ""
        required: false
      lambda-compatible:
        required: false
        type: boolean
        default: false
        description: "If set, the image will be built for lambda, disabling provenance and sbom."
      platforms:
        required: false
        type: string
        default: "linux/amd64"
        description: "The platforms to build for. Valid values: linux/amd64 or linux/arm64 Defaults to linux/amd64."
      aws-role-name-to-assume:
        required: false
        type: string
        description: "The AWS role name to assume. Used for migration purposes for teams using older GHA roles."
        default: ${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}

name: Upload Deployable to ECR

permissions:
  id-token: write
  contents: read

jobs:
  build-and-upload-docker-image:
    name: Upload Docker Image to ECR
    environment: 'Service'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifact
        if: inputs.artifact-name != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{inputs.working-directory}}/${{ inputs.artifact-path }}

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-role-name-to-assume }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.working-directory }}
          platforms: ${{ inputs.platforms }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo-name }}:${{ github.event.pull_request.head.sha || github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repo-name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # provenance and sbom are not supported for lambda images
          provenance: ${{ inputs.lambda-compatible == 'false' }}
          sbom: ${{ inputs.lambda-compatible == 'false' }}
