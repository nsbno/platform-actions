on:
  workflow_call:
    secrets:
      NEXUS_USERNAME:
        required: true
        description: "Nexus login username."
      NEXUS_PASSWORD:
        required: true
        description: "Nexus login password."

    inputs:
      java_version:
        required: false
        type: string
        description: "What Java version to use."
        default: "17"
      java_distribution:
        required: false
        type: string
        default: "temurin"
        description: "What Java distribution to use. Default is temurin (By Adoptium)."
      working_directory:
        required: false
        type: string
        default: "."

      artifact_name:
        required: false
        type: string
        default: "application-build"
      artifact_path:
        required: false
        type: string
        default: "./build/libs"  # Default for Gradle.

    outputs:
      artifact_name:
        description: The name of the artifact generated by the build
        value: ${{ inputs.artifact_name }}
      artifact_path:
        description: Where the artifact is stored in the working directory.
        value: ${{ inputs.artifact_path }}

jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

        # Cache dependencies
      - name: Set up Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: nsbno/platform-actions/.github/actions/tools/gradle@main
        with:
          java_version: ${{ inputs.java_version }}
          java_distribution: ${{ inputs.java_distribution }}
          gradle_operations: 'build test'
          working_directory: ${{ inputs.working_directory }}

      - name: Store built JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_path }}
