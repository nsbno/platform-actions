on:
  workflow_call:
    inputs:
      application-name:
        required: false
        type: string
        description: "Name of the S3 Folder to publish to."
        default: ${{github.event.repository.name}}
      artifact-name:
        required: true
        type: string
        description: "Name of the artifact storing the build files."
      s3-bucket-name:
        required: false
        type: string
        description: "Name of the S3 bucket to upload to."
        default: ''
      aws-region:
        required: false
        type: string
        description: "AWS region to use."
        default: 'eu-west-1'

name: Upload single file to S3 with correct file extension

permissions:
  id-token: write
  contents: read

jobs:
  upload-zip-to-s3:
    name: Upload zip to S3
    environment: Service
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: "./temp-artifact"

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}"

      - name: Upload single file to S3
        env:
          S3_BUCKET: ${{ inputs.s3-bucket-name != '' && inputs.s3-bucket-name || format('{0}-deployment-delivery-pipeline-artifacts', vars.AWS_ACCOUNT_ID) }}
          GIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
          APPLICATION_NAME: ${{ inputs.application-name }}
          ARTIFACT_NAME: ${{ inputs.artifact-name }}
        run: |
          set -euo pipefail
          BRANCH=$(echo $GITHUB_REF | cut -f3 -d/)

          # Locate the downloaded artifact file
          FILE_COUNT=$(find ./temp-artifact -type f | wc -l | tr -d ' ')
          if [ "$FILE_COUNT" -eq 0 ]; then
            echo "Error: No files found in ./temp-artifact from downloaded artifact '${ARTIFACT_NAME}'." >&2
            exit 1
          elif [ "$FILE_COUNT" -gt 1 ]; then
            echo "Error: Multiple files found in ./temp-artifact. This workflow uploads a single file; please ensure the artifact contains exactly one file." >&2
            find ./temp-artifact -maxdepth 2 -type f -print
            exit 1
          fi

          FILE_PATH=$(find ./temp-artifact -type f | head -n1)
          FILE_NAME="$(basename "$FILE_PATH")"

          # Determine file extension
          EXTENSION="${FILE_NAME##*.}"
          if [ "$EXTENSION" = "$FILE_NAME" ]; then
            echo "No file extension found for '$FILE_NAME'." >&2
            exit 1
          fi

          aws s3 cp "$FILE_PATH" "s3://$S3_BUCKET/$APPLICATION_NAME/$GIT_SHA.$EXTENSION" --metadata "tags"="'[\"${GIT_SHA}-SHA\",\"${BRANCH}-branch\"]'"
          aws s3 cp "$FILE_PATH" "s3://$S3_BUCKET/$APPLICATION_NAME/$BRANCH.$EXTENSION" --metadata "tags"="'[\"${GIT_SHA}-SHA\",\"${BRANCH}-branch\"]'"
