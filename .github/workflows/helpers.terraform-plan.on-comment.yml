name: Terraform Plan on comment
on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory containing the project files"
        required: false
        type: string
        default: "."
      terraform-directory:
        description: Directory where Terraform environment directories are located
        type: string
        required: false
        default: ''
      skip-service-environment:
        description: Skip the service environment, if the repository does not deploy to the service environment.
        type: boolean
        default: false
        required: false

jobs:
  trigger:
    # Own implementation of trigger which is not branch-deploy because of message body customization
    name: Trigger .tf plan
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '.tf plan')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      git_sha: ${{ steps.get-sha.outputs.sha }}
      issue_number: ${{ steps.ids.outputs.issue_number }}
      comment_id: ${{ steps.ids.outputs.comment_id }}
      status_comment_id: ${{ steps.status-comment.outputs.comment-id }}
      environment: ${{ steps.ids.outputs.environment || '' }}
    steps:
      - id: ids
        run: |
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "comment_id=${{ github.event.comment.id }}" >> $GITHUB_OUTPUT

          ENVIRONMENT=$(echo "${{ github.event.comment.body }}" | awk '{print $3}')
          if [ -z "$ENVIRONMENT" ]; then
            echo "No environment specified in the comment. Running plan for all environments."
            exit 0
          fi
  
          # Map environment names to match GitHub environment names if needed
          if [ "$ENVIRONMENT" = "dev" ]; then
              ENVIRONMENT="Development"
          elif [ "$ENVIRONMENT" = "test" ]; then
              ENVIRONMENT="Test"
          elif [ "$ENVIRONMENT" = "stage" ]; then
              ENVIRONMENT="Stage"
          elif [ "$ENVIRONMENT" = "service" ]; then
              ENVIRONMENT="Service"
          elif [ "$ENVIRONMENT" = "prod" ] || [ "$ENVIRONMENT" = "production" ]; then
              ENVIRONMENT="Production"
          fi
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Determine PR SHA
        id: get-sha
        run: |
          PR_NUMBER=${{ github.event.issue.number }}
          SHA=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER --jq .head.sha)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Add eyes reaction to triggering comment
        run: |
          gh api \
            --method POST \
            repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }}/reactions \
            -f content='eyes'

      - name: Comment plan is running
        id: status-comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ### Terraform plan initiated
            
            Commit: [${{ steps.get-sha.outputs.sha }}](${{ github.server_url }}/${{ github.repository }}/pull/${{ github.event.issue.number }}/commits/${{ steps.get-sha.outputs.sha }})
            
            _If you see a üöÄ on your comment and no Terraform Plan output, it means no changes were detected._

  plan:
    needs: trigger
    uses: nsbno/platform-actions/.github/workflows/helpers.terraform-plan.yml@v1
    with:
      working-directory: ${{ inputs.working-directory }}
      terraform-directory: ${{ inputs.terraform-directory }}
      skip-service-environment: ${{ inputs.skip-service-environment }}
      git-sha: ${{ needs.trigger.outputs.git_sha }}
      environment: ${{ needs.trigger.outputs.environment || '' }}

  reaction-handling:
    name: Remove eyes, React rocket
    if: ${{ success() }}
    needs:
      - trigger
      - plan
    runs-on: ubuntu-latest
    steps:
      - name: Remove eyes reaction from triggering comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          REACTION_ID=$(gh api \
            repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions \
            | jq -r '.[] | select(.content == "eyes") | .id' | head -n 1)

          if [ -n "$REACTION_ID" ]; then
            gh api \
              --method DELETE \
              repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions/$REACTION_ID
          else
            echo "No 'eyes' reaction found to remove."
          fi

      - name: Add rocket reaction to triggering comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions \
            -f content='rocket'

  reaction-on-failure:
    name: remove eyes, react fail, comment
    if: ${{ failure() }}
    needs:
      - trigger
      - plan
    runs-on: ubuntu-latest
    steps:
      - name: Remove eyes reaction from triggering comment (if present)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          REACTION_ID=$(gh api \
            repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions \
            | jq -r '.[] | select(.content == "eyes") | .id' | head -n 1)

          if [ -n "$REACTION_ID" ]; then
            gh api \
              --method DELETE \
              repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions/$REACTION_ID
          else
            echo "No 'eyes' reaction found to remove."
          fi

      - name: Add fail reaction to triggering comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            --method POST \
            repos/${{ github.repository }}/issues/comments/${{ needs.trigger.outputs.comment_id }}/reactions \
            -f content='-1'

      - name: Comment plan failed
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ needs.trigger.outputs.status_comment_id }}
          edit-mode: 'replace'
          body: |
            ### ‚ùå Terraform plan failed

            üîó [Inspect the failed run here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Commit: [${{ needs.trigger.outputs.git_sha }}](${{ github.server_url }}/${{ github.repository }}/pull/${{ needs.trigger.outputs.issue_number }}/commits/${{ needs.trigger.outputs.git_sha }})

            Please open the link over for details. If this was unexpected, try re-running the workflow from the Actions tab.