on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory containing the project files"
        required: false
        type: string
        default: "."
      terraform-directory:
        description: Directory where Terraform environment directories are located
        type: string
        required: false
        default: 'environments'

jobs:
  get-environments:
    name: Find Relevant GH Environments
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.envs.outputs.environments }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: nsbno/platform-actions/.github/actions/helpers/get-environments@main
        id: envs

  terraform-plan:
    name: Terraform Plan
    needs: get-environments
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.get-environments.outputs.environments) }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Terraform Plan
        uses: nsbno/platform-actions/.github/actions/helpers/has-terraform-changed@main
        id: changed-files
        with:
          environment: ${{ matrix.environment }}
          aws-region: ${{ vars.AWS_REGION }}
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          deployment-role: ${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}
          working-directory: ${{ inputs.working-directory }}
          terraform-directory: ${{ inputs.terraform-directory }}

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.any-changed == 'true'
        name: Add Terraform Plan to PR
        env:
          ENVIRONMENT: ${{ matrix.environment }}
          PLAN: "terraform\n${{ steps.changed-files.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const now = new Date();
            const formattedDate = now.toISOString()
              .replace('T', ' ')
              .replace(/\.\d+Z$/, ' UTC');
            
            const output = `### Terraform Plan for ${process.env.ENVIRONMENT} üîç
  
            <details>
            <summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
  
            </details>
  
            *Commit ${{ github.sha }}*
            *Plan generated at: ${formattedDate}*`;
        
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })