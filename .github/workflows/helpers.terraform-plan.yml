on:
  workflow_call:
    inputs:
      working-directory:
        description: "Directory containing the project files"
        required: false
        type: string
        default: "."
      terraform-directory:
        description: Directory where Terraform environment directories are located
        type: string
        required: false
        default: 'terraform'
      skip-service-environment:
        description: Skip the service environment, if the repository does not deploy to the service environment.
        type: boolean
        default: false
        required: false

jobs:
  get-environments:
    name: Find Relevant GH Environments
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.envs.outputs.environments }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: nsbno/platform-actions/.github/actions/helpers/get-environments@main
        id: envs
        with:
          skip-service-environment: ${{ inputs.skip-service-environment }}

  terraform-plan:
    name: Terraform Plan
    needs: get-environments
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.get-environments.outputs.environments) }}
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Terraform Plan
        uses: nsbno/platform-actions/.github/actions/helpers/has-terraform-changed@main
        id: changed-files
        with:
          environment: ${{ matrix.environment }}
          aws-region: ${{ vars.AWS_REGION }}
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          deployment-role: ${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}
          working-directory: ${{ inputs.working-directory }}
          terraform-directory: ${{ inputs.terraform-directory }}
          terraform-options: '-no-color'

      - name: Add Terraform Plan to PR
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.any-changed == 'true'
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          ENVIRONMENT: ${{ matrix.environment }}
        run: |
          PLAN_OUTPUT=$(cat << 'EOF'
          ${{ steps.changed-files.outputs.stdout }}
          EOF
          )
          
          PLAN_CONTENT=$(echo "$PLAN_OUTPUT" | sed -n '/Terraform used the selected providers/,$p')
          if [ -z "$PLAN_CONTENT" ]; then
            PLAN_CONTENT="$PLAN_OUTPUT"
          fi
      
          COMMENT_FILE=$(mktemp)
      
          cat << EOF > "$COMMENT_FILE"
          ### Terraform Plan for ${ENVIRONMENT} üîç
      
          <details>
          <summary>Show Plan</summary>
      
          \`\`\`terraform
          $PLAN_CONTENT
          \`\`\`
      
          </details>
      
          *For commit ${{ github.sha }}*
          *Plan generated at: $(date -u "+%Y-%m-%d %H:%M:%S UTC")*
          EOF
      
          gh pr comment $PR_NUMBER --body-file "$COMMENT_FILE"
      
          rm "$COMMENT_FILE"