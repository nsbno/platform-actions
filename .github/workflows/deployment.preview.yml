name: deployment.preview.yml
on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
        description: "The name of the service to deploy"
      service-port:
        required: false
        type: string
        default: "3000"
        description: "The port the service is running on, default is 3000"
      git-sha:
        required: false
        type: string
        default: ${{ github.event.pull_request.head.sha || github.sha }}
      domain-name:
        required: false
        type: string
        default: ""
      git-event-number:
        required: false
        type: string
        default: ${{ github.event.pull_request.number || github.event.issue.number || github.event.number }}
      git-repository:
        required: false
        type: string
        default: ${{ github.repository }}
      only-on-preview-comment:
        required: false
        type: boolean
        default: true
        description: "Whether to check for a .preview comment before deploying"

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  build:
    name: Deploy Preview if checks pass
    runs-on: ubuntu-latest
    environment: Test
    outputs:
      deployment-successful: ${{ steps.app-runner-deploy.conclusion == 'success' }}
    steps:
      - name: Check for .preview comments
        if: ${{ inputs.only-on-preview-comment }}
        id: check-comments
        run: |
          PR_NUMBER=${{ inputs.git-event-number }}
          
          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "0" ]; then
            echo "PR number is not available in this context. Skipping deployment."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          COMMENTS=$(gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments --paginate)
          
          if echo "$COMMENTS" | jq -e '.[] | select(.body | startswith(".preview"))' > /dev/null; then
            echo "Found a .preview comment in PR #$PR_NUMBER, continuing..."
            echo "continue=true" >> $GITHUB_OUTPUT
          else
            echo "No .preview comment found in PR #$PR_NUMBER, skipping deployment."
            echo "continue=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        if: ${{ inputs.only-on-preview-comment == false || steps.check-comments.outputs.continue == 'true' }}
        with:
          fetch-depth: '0' # Fetch all history for all branches and tags (for branches)
          ref: ${{ inputs.git-sha }}

      - name: Authenticate with AWS
        if: ${{ inputs.only-on-preview-comment == false || steps.check-comments.outputs.continue == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}"

      # Get the deployment information for the service. Need to deploy without preview once first for the bucket to be created.
      - name: Get Application Deployment Information
        if: ${{ inputs.only-on-preview-comment == false || steps.check-comments.outputs.continue == 'true' }}
        id: deployment-info
        uses: nsbno/platform-actions/.github/actions/deployment/get-application-deployment-info@v1
        with:
          application-name: ${{ inputs.service-name }}

      - name: Deploy App Runner Preview Service
        if: ${{ inputs.only-on-preview-comment == false || steps.check-comments.outputs.continue == 'true' }}
        id: app-runner-deploy
        uses: nsbno/platform-actions/.github/actions/deployment/preview/deploy-app-runner@v1
        with:
          service-name: ${{ inputs.service-name }}
          ecr-image-base: ${{ steps.deployment-info.outputs.ecr-image-base }}
          git-sha: ${{ inputs.git-sha }}
          service-port: ${{ inputs.service-port }}
          aws-account-id: ${{ vars.AWS_ACCOUNT_ID }}
          aws-region: ${{ vars.AWS_REGION }}
          git-event-number: ${{ inputs.git-event-number }}

      - name: Push Mapping to DynamoDB and Comment domain name
        if: ${{ inputs.only-on-preview-comment == false || steps.check-comments.outputs.continue == 'true' }}
        uses: nsbno/platform-actions/.github/actions/deployment/preview/push-mapping-dynamodb@v1
        with:
          # The domain name is an assumption based on the PR number and service name, may need to be adjusted
          domain-name: "pr-${{ inputs.git-event-number }}.${{ inputs.domain-name != '' && inputs.domain-name || steps.deployment-info.outputs.cloudfront-domain-name }}"
          apprunner-host: ${{ steps.app-runner-deploy.outputs.app-runner-url }}
          dynamodb-table-arn: "arn:aws:dynamodb:us-east-1:${{ steps.deployment-info.outputs.central-deployment-account-id }}:table/platform-preview-url-mapper"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-repository: ${{ inputs.git-repository }}
          github-event-number: ${{ inputs.git-event-number }}

  send-tracking:
    name: Report Preview Deployment Status
    if: ${{ needs.build.outputs.deployment-successful == 'true' }}
    needs: build
    uses: nsbno/platform-actions/.github/workflows/helpers.deployment-tracking.yml@validation
    secrets: inherit
    with:
      status: "succeeded"
      tracking-type: reporter
