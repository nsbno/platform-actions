on:
  workflow_call:
    inputs:
      python_version:
        required: false
        type: string
        description: "What Python version to use."
        default: "3.13"
      working-directory:
        required: false
        type: string
        default: "."

      artifact-name:
        required: false
        type: string
        default: "lambda-artifact"
      git-sha:
        required: false
        type: string
        default: ${{ github.event.pull_request.head.sha || github.sha }}

    outputs:
      artifact-name:
        description: The name of the artifact generated by the build
        value: ${{ jobs.build.outputs.artifact-name }}
      artifact-path:
        description: Where the artifact is stored in the working directory.
        value: ${{ jobs.build.outputs.artifact-path }}

jobs:
  build:
    name: Build Python
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload-artifact.outputs.name }}
      artifact-path: ${{ steps.upload-artifact.outputs.path }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0' # Fetch all history for all branches and tags (for branches)
          ref: ${{ inputs.git-sha }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "${{ inputs.working-directory }}/uv.lock"

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: |
          uv build
          uv pip install dist/*.whl --target ./out
          find ./out/ -name "__pycache__" -type d -exec rm -rf {}

      - name: Store build as Artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.working-directory }}/out
          retention-days: 5
