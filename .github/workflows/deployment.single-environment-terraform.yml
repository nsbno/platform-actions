name: Deploy only Terraform to single environment
# We use this workflow so application deploy for service does not show up in the visualization graph in GH

on:
  workflow_call:
    inputs:
      environment:
        description: Environment to deploy
        type: string
        required: true
      deploy-terraform:
        description: Should terraform be deployed
        type: boolean
        required: true
      working-directory:
        description: "Directory containing the project files"
        required: false
        type: string
        default: "."
      terraform-directory:
        description: Directory where Terraform environment directories are located
        type: string
        required: false
        default: ''
      sha-to-deploy:
        description: The SHA to deploy. Defaults to the current commit SHA.
        type: string
        required: false
        default: ${{ github.event.pull_request.head.sha || github.sha }}

run-name: Deploy Terraform to ${{ inputs.environment }}

permissions:
  contents: read
  id-token: write

concurrency:
  group: ${{ inputs.working-directory }}-${{ inputs.environment }}-terraform

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest
    name: ${{ inputs.environment }} - Terraform
    environment: ${{ inputs.environment }}
    if: inputs.deploy-terraform
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0' # Fetch all history for all branches and tags (for branch deploys)
          ref: ${{ inputs.sha-to-deploy }}

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_DEPLOYMENT_ROLE_NAME }}"

      - uses: nsbno/platform-actions/.github/actions/helpers/environment-mapping@v1
        name: Find Relevant Environment Directory
        id: env-mapping
        with:
          environment: ${{ inputs.environment }}

      - uses: nsbno/platform-actions/.github/actions/tools/terraform@v1
        name: Terraform Apply
        with:
          env-mapping-directory: ${{ steps.env-mapping.outputs.directory }}
          terraform-directory: ${{ inputs.terraform-directory }}
          working-directory: ${{ inputs.working-directory }}
          terraform-command: 'apply'
          terraform-options: '--auto-approve'
          always-run-init: 'true'
          git-sha: ${{ inputs.sha-to-deploy }}
