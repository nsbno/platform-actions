name: Branch Preview Deployment
on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
        description: "The name of the service to deploy"

jobs:
  trigger:
    name: Trigger - Branch Preview
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '.preview')
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.branch-comment-handler.outputs.continue }}
      deployment_id: ${{ steps.branch-comment-handler.outputs.deployment_id }}
      environment: ${{ steps.branch-comment-handler.outputs.environment }}
      ref: ${{ steps.branch-comment-handler.outputs.ref }}
      sha: ${{ steps.branch-comment-handler.outputs.sha }}
      comment_id: ${{ steps.branch-comment-handler.outputs.comment_id }}
      initial_reaction_id: ${{ steps.branch-comment-handler.outputs.initial_reaction_id }}
      actor_handle: ${{ steps.branch-comment-handler.outputs.actor_handle }}

    steps:
      - uses: github/branch-deploy@v10.4.2
        id: branch-comment-handler
        with:
          trigger: '.preview'
          environment: 'Preview'
          skip_completing: 'true' # we will complete the deployment manually
          skip_reviews: 'Preview' # skip reviews for Preview environments

  preview:
    needs: trigger
    uses: nsbno/platform-actions/.github/workflows/deployment.preview.yml@main
    with:
      service-name: ${{ inputs.service-name }}
      git-event-number: ${{ github.event.issue.number }}
      git-repository: ${{ github.repository }}
      git-sha: ${{ needs.trigger.outputs.sha }}

  comment-handler:
    needs: [ trigger, preview ]
    runs-on: ubuntu-latest
    if: ${{ always() && needs.trigger.outputs.continue == 'true' }}
    steps:
      - uses: nsbno/platform-actions/.github/actions/helpers/branch-comment-handler@main
        with:
          is-preview: true
          environment: 'Preview'
          github-repository: ${{ github.repository }}
          github-token: ${{ github.token }}
          issue-number: ${{ github.event.issue.number }}
          ref: ${{ needs.trigger.outputs.ref }}
          initial-reaction-id: ${{ needs.trigger.outputs.initial_reaction_id }}
          deployment-id: ${{ needs.trigger.outputs.deployment_id }}
          comment-id: ${{ needs.trigger.outputs.comment_id }}
          actor-handle: ${{ needs.trigger.outputs.actor_handle }}
          job-status: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') && 'failure' || 'success' }}
