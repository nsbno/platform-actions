name: Terraform Action
description: Run terraform

inputs:
  directory:
    required: true
    description: The directory where the Terraform configuration is located.
  terraform-command:
    required: true
    description: The Terraform command to run
  terraform-use-backend:
    required: false
    description: 'Whether to use a backend configuration for Terraform.'
    default: "true"
  terraform-options:
    required: false
    description: 'The options to use in the Terraform configuration.'
    default: ""
  fail-on-exit-code:
    required: false
    description: 'Whether to fail the action if the Terraform command exits with a non-zero exit code.'
    default: "true"
  always-run-init:
    required: false
    description: 'Whether to always run terraform init.'
    default: "false"
  working-directory:
    description: "Directory containing the project files"
    required: false
    default: "."

outputs:
  exitcode:
    description: 'The exit code of the Terraform command.'
    value: ${{ steps.terraform.outputs.exitcode }}
  stdout:
    description: 'The standard output of the Terraform command.'
    value: ${{ steps.terraform.outputs.stdout }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        cache: 'false'  # There is no go.sum file, so the cache doesn't work.
        go-version: '>=1.18'

    - name: Cache Go module
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/go/bin
          ~/.cache/go-build
        key: go-${{ runner.os }}-

    - name: Find Terraform version
      shell: bash
      run: |
        which terraform-config-inspect || go install github.com/hashicorp/terraform-config-inspect@latest
        version=$(terraform-config-inspect ${{ inputs.directory }} --json | jq -r '.required_core[0]')
        echo "Terraform version: $version"
        if [ "$version" != "null" ]; then
          echo TERRAFORM_VERSION=${version} >> $GITHUB_ENV
          exit 0
        fi
        version=$(terraform-config-inspect ${{inputs.working-directory}}/infrastructure --json | jq -r '.required_core[0]')
        echo "Terraform version: $version"
        if [ "$version" != "null" ]; then
          echo TERRAFORM_VERSION=${version} >> $GITHUB_ENV
          exit 0
        fi
        version=$(terraform-config-inspect ${{inputs.working-directory}}/terrraform/template --json | jq -r '.required_core[0]')
        echo "Terraform version: $version"
        if [ "$version" != "null" ]; then
          echo TERRAFORM_VERSION=${version} >> $GITHUB_ENV
          exit 1
        fi

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Cache Terraform
      id: terraform-cache
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/${{ inputs.directory }}/.terraform
        key: ${{runner.os}}-${{ inputs.directory }}-terraform-${{ github.sha }}
        restore-keys: |
          ${{runner.os}}-${{ inputs.directory }}-terraform-

    - name: Terraform Init
      if: steps.restore-terraform.outputs.cache-hit == 'false' || inputs.always-run-init == 'true'
      shell: bash
      working-directory: ${{ inputs.directory }}
      run: |
        terraform init --backend=${{ inputs.terraform-use-backend }}

    - name: Terraform Command
      working-directory: ${{ inputs.directory }}
      id: terraform
      shell: bash
      run: terraform ${{ inputs.terraform-command }} ${{ inputs.terraform-options }}

    - name: Terraform Output
      continue-on-error: ${{ inputs.fail-on-exit-code == 'false' }}
      shell: bash
      run: |
        if [ "${{ steps.terraform.outputs.exitcode }}" = "1" ]; then
          echo "Terraform failed with an error."
        elif [ "${{ steps.terraform.outputs.exitcode }}" = "2" ]; then
          echo "Terraform succeeded with changes present."
        else
          echo "Terraform exited with an unexpected code: ${{ steps.terraform.outputs.exitcode }}"
        fi
